{
  "swagger": "2.0",
  "info": {
    "version": "2016-08-06T06:37:56Z",
    "title": "myClaireBot"
  },
  "host": "uzskui2apg.execute-api.us-east-1.amazonaws.com",
  "basePath": "/development",
  "schemes": [
    "https"
  ],
  "paths": {
    "/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Content-Type": {
                "type": "string"
              }
            }
          },
          "500": {
            "description": "500 response",
            "headers": {
              "Content-Type": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "requestTemplates": {
            "application/json": "{\n  \"method\": \"$context.httpMethod\",\n  \"path\": \"$context.resourcePath\",\n  #set ($type=$input.params().header.get('Content-Type'))\n  #if($type.contains(\";\"))\n\t#set ($type=$type.split(\";\")[0])\n  #end\n  #if($type == \"application/x-www-form-urlencoded\")\n   \"post\": {\n    #foreach($param in $input.path('$').split('&'))\n      #set ($kv = $param.split('='))\n      \"$util.urlDecode($kv[0])\":\n        #if($kv.size() > 1)\n          \"$util.escapeJavaScript($util.urlDecode($kv[1])).replace(\"\\'\", \"'\")\"\n        #else\n          \"\"\n        #end\n        #if($foreach.hasNext),#end\n    #end\n    },\n    \"body\" : \"$util.escapeJavaScript($input.body).replace(\"\\'\", \"'\")\",\n  #elseif($type == \"application/xml\" || $type == \"text/plain\" || $type == \"text/xml\")\n    \"body\" : \"$util.escapeJavaScript($input.body).replace(\"\\'\", \"'\")\",\n  #else\n    \"body\" : $input.json('$'),\n    \"rawBody\": \"$util.escapeJavaScript($input.body).replace(\"\\'\", \"'\")\",\n  #end\n  \"headers\": {\n    #foreach($param in $input.params().header.entrySet())\n      \"$param.getKey().toLowerCase()\": \"$util.escapeJavaScript($param.getValue()).replace(\"\\'\", \"'\")\" #if($foreach.hasNext),#end\n    #end\n  },\n  \"query\": {\n    #foreach($param in $input.params().querystring.entrySet())\n      \"$param.getKey()\": \"$util.escapeJavaScript($param.getValue()).replace(\"\\'\", \"'\")\" #if($foreach.hasNext),#end\n    #end\n  },\n  \"env\": {\n    #foreach($param in $stageVariables.entrySet())\n      \"$param.getKey()\": \"$util.escapeJavaScript($param.getValue())\" #if($foreach.hasNext),#end\n    #end\n  },\n  \"params\": {\n    #foreach($param in $input.params().path.entrySet())\n      \"$param.getKey()\": \"$util.escapeJavaScript($param.getValue()).replace(\"\\'\", \"'\")\" #if($foreach.hasNext),#end\n    #end\n  }\n}\n"
          },
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:898844291538:function:myClaireBot:${stageVariables.lambdaVersion}/invocations",
          "passthroughBehavior": "when_no_templates",
          "responses": {
            "default": {
              "statusCode": "500",
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'"
              }
            },
            "^$": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Content-Type": "'text/plain'"
              },
              "responseTemplates": {
                "text/plain": "$input.path('$')"
              }
            }
          },
          "httpMethod": "POST",
          "type": "aws"
        }
      }
    },
    "/facebook": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Content-Type": {
                "type": "string"
              }
            }
          },
          "500": {
            "description": "500 response",
            "headers": {
              "Content-Type": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "requestTemplates": {
            "application/json": "{\n  \"method\": \"$context.httpMethod\",\n  \"path\": \"$context.resourcePath\",\n  #set ($type=$input.params().header.get('Content-Type'))\n  #if($type.contains(\";\"))\n\t#set ($type=$type.split(\";\")[0])\n  #end\n  #if($type == \"application/x-www-form-urlencoded\")\n   \"post\": {\n    #foreach($param in $input.path('$').split('&'))\n      #set ($kv = $param.split('='))\n      \"$util.urlDecode($kv[0])\":\n        #if($kv.size() > 1)\n          \"$util.escapeJavaScript($util.urlDecode($kv[1])).replace(\"\\'\", \"'\")\"\n        #else\n          \"\"\n        #end\n        #if($foreach.hasNext),#end\n    #end\n    },\n    \"body\" : \"$util.escapeJavaScript($input.body).replace(\"\\'\", \"'\")\",\n  #elseif($type == \"application/xml\" || $type == \"text/plain\" || $type == \"text/xml\")\n    \"body\" : \"$util.escapeJavaScript($input.body).replace(\"\\'\", \"'\")\",\n  #else\n    \"body\" : $input.json('$'),\n    \"rawBody\": \"$util.escapeJavaScript($input.body).replace(\"\\'\", \"'\")\",\n  #end\n  \"headers\": {\n    #foreach($param in $input.params().header.entrySet())\n      \"$param.getKey().toLowerCase()\": \"$util.escapeJavaScript($param.getValue()).replace(\"\\'\", \"'\")\" #if($foreach.hasNext),#end\n    #end\n  },\n  \"query\": {\n    #foreach($param in $input.params().querystring.entrySet())\n      \"$param.getKey()\": \"$util.escapeJavaScript($param.getValue()).replace(\"\\'\", \"'\")\" #if($foreach.hasNext),#end\n    #end\n  },\n  \"env\": {\n    #foreach($param in $stageVariables.entrySet())\n      \"$param.getKey()\": \"$util.escapeJavaScript($param.getValue())\" #if($foreach.hasNext),#end\n    #end\n  },\n  \"params\": {\n    #foreach($param in $input.params().path.entrySet())\n      \"$param.getKey()\": \"$util.escapeJavaScript($param.getValue()).replace(\"\\'\", \"'\")\" #if($foreach.hasNext),#end\n    #end\n  }\n}\n"
          },
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:898844291538:function:myClaireBot:${stageVariables.lambdaVersion}/invocations",
          "passthroughBehavior": "when_no_templates",
          "responses": {
            "default": {
              "statusCode": "500",
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'"
              }
            },
            "^$": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Content-Type": "'text/plain'"
              },
              "responseTemplates": {
                "text/plain": "$input.path('$')"
              }
            }
          },
          "httpMethod": "POST",
          "type": "aws"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Content-Type": {
                "type": "string"
              }
            }
          },
          "500": {
            "description": "500 response",
            "headers": {
              "Content-Type": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "requestTemplates": {
            "application/json": "{\n  \"method\": \"$context.httpMethod\",\n  \"path\": \"$context.resourcePath\",\n  #set ($type=$input.params().header.get('Content-Type'))\n  #if($type.contains(\";\"))\n\t#set ($type=$type.split(\";\")[0])\n  #end\n  #if($type == \"application/x-www-form-urlencoded\")\n   \"post\": {\n    #foreach($param in $input.path('$').split('&'))\n      #set ($kv = $param.split('='))\n      \"$util.urlDecode($kv[0])\":\n        #if($kv.size() > 1)\n          \"$util.escapeJavaScript($util.urlDecode($kv[1])).replace(\"\\'\", \"'\")\"\n        #else\n          \"\"\n        #end\n        #if($foreach.hasNext),#end\n    #end\n    },\n    \"body\" : \"$util.escapeJavaScript($input.body).replace(\"\\'\", \"'\")\",\n  #elseif($type == \"application/xml\" || $type == \"text/plain\" || $type == \"text/xml\")\n    \"body\" : \"$util.escapeJavaScript($input.body).replace(\"\\'\", \"'\")\",\n  #else\n    \"body\" : $input.json('$'),\n    \"rawBody\": \"$util.escapeJavaScript($input.body).replace(\"\\'\", \"'\")\",\n  #end\n  \"headers\": {\n    #foreach($param in $input.params().header.entrySet())\n      \"$param.getKey().toLowerCase()\": \"$util.escapeJavaScript($param.getValue()).replace(\"\\'\", \"'\")\" #if($foreach.hasNext),#end\n    #end\n  },\n  \"query\": {\n    #foreach($param in $input.params().querystring.entrySet())\n      \"$param.getKey()\": \"$util.escapeJavaScript($param.getValue()).replace(\"\\'\", \"'\")\" #if($foreach.hasNext),#end\n    #end\n  },\n  \"env\": {\n    #foreach($param in $stageVariables.entrySet())\n      \"$param.getKey()\": \"$util.escapeJavaScript($param.getValue())\" #if($foreach.hasNext),#end\n    #end\n  },\n  \"params\": {\n    #foreach($param in $input.params().path.entrySet())\n      \"$param.getKey()\": \"$util.escapeJavaScript($param.getValue()).replace(\"\\'\", \"'\")\" #if($foreach.hasNext),#end\n    #end\n  }\n}\n"
          },
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:898844291538:function:myClaireBot:${stageVariables.lambdaVersion}/invocations",
          "passthroughBehavior": "when_no_templates",
          "responses": {
            "default": {
              "statusCode": "500",
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'"
              }
            },
            "^$": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Content-Type": "'text/plain'"
              },
              "responseTemplates": {
                "text/plain": "$input.path('$')"
              }
            }
          },
          "httpMethod": "POST",
          "type": "aws"
        }
      }
    }
  }
}
